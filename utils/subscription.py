from datetime import datetime, timedelta
from typing import Dict

SUBSCRIPTION_PRICES = {
    "1_day": 100,
    "7_days": 500,
    "30_days": 1000
}

def get_subscription_info(sub_type: str) -> Dict[str, any]:
    days_map = {"1_day": 1, "7_days": 7, "30_days": 30}
    return {
        "days": days_map.get(sub_type, 0),
        "price": SUBSCRIPTION_PRICES.get(sub_type, 0)
    }

def format_subscription_type(sub_type: str) -> str:
    types_map = {
        "30_days": "1 –ú–µ—Å—è—Ü",
        "7_days": "7 –î–Ω–µ–π",
        "1_day": "1 –î–µ–Ω—å",
        "demo": "–î–µ–º–æ-–¥–æ—Å—Ç—É–ø"
    }
    return types_map.get(sub_type, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø")

def format_subscription_message(sub_type: str, requisites: tuple) -> str:
    info = get_subscription_info(sub_type)
    card_number, sbp, bank, holder = requisites
    
    return (
        f"üí≥ –û–ø–ª–∞—Ç–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ {info['days']} {'–¥–µ–Ω—å' if info['days'] == 1 else '–¥–Ω–µ–π'}\n"
        f"–°—É–º–º–∞ –∫ –æ–ø–ª–∞—Ç–µ: {info['price']}‚ÇΩ\n\n"
        f"–†–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è –æ–ø–ª–∞—Ç—ã:\n"
        f"–ù–æ–º–µ—Ä –∫–∞—Ä—Ç—ã: {card_number}\n"
        f"–°–ë–ü: {sbp}\n"
        f"–ë–∞–Ω–∫: {bank}\n"
        f"–ü–æ–ª—É—á–∞—Ç–µ–ª—å: {holder}\n\n"
        "–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –æ–ø–ª–∞—Ç—É' –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç —á–µ–∫–∞."
    )
